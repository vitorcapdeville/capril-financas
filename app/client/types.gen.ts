// This file is auto-generated by @hey-api/openapi-ts

export type BodyCadastrarVendaVendasPost = {
    venda: VendaCreate;
    items: Array<ItemCreate>;
};

export type BodyLoginAccessTokenLoginAccessTokenPost = {
    grant_type?: string | null;
    username: string;
    password: string;
    scope?: string;
    client_id?: string | null;
    client_secret?: string | null;
};

export type ClienteCreate = {
    nome: string;
    email: string;
    categoria: string;
    endereco: string;
};

export type ClientePublic = {
    nome: string;
    email: string;
    categoria: string;
    endereco: string;
    id: number;
};

export type ClientesPublic = {
    data: Array<ClientePublic>;
    count: number;
};

export type CompraCreate = {
    data_compra: string;
    valor: number;
    categoria: string;
    fornecedor_id: number;
};

export type CompraPublic = {
    data_compra: string;
    valor: number;
    categoria: string;
    fornecedor_id: number;
    id: number;
};

export type ComprasPublic = {
    data: Array<CompraPublic>;
    count: number;
};

export type FornecedorCreate = {
    nome: string;
};

export type FornecedorPublic = {
    nome: string;
    id: number;
};

export type FornecedoresPublic = {
    data: Array<FornecedorPublic>;
    count: number;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type Item = {
    preco_unitario: number;
    quantidade: number;
    produto_id: number;
    id?: number | null;
    venda_id?: number | null;
};

export type ItemCreate = {
    preco_unitario: number;
    quantidade: number;
    produto_id: number;
};

export type ProdutoCreate = {
    nome: string;
    peso_em_gramas: number;
};

export type ProdutoPublic = {
    nome: string;
    peso_em_gramas: number;
    id: number;
};

export type ProdutosPublic = {
    data: Array<ProdutoPublic>;
    count: number;
};

export type Token = {
    access_token: string;
    token_type?: string;
};

export type UserPublic = {
    email: string;
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: string | null;
    id: number;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type VendaCreate = {
    data_venda: string;
    data_pagamento?: string | null;
    cliente_id: number;
};

export type VendaPublic = {
    data_venda: string;
    data_pagamento?: string | null;
    cliente_id: number;
    id: number;
    items: Array<Item>;
};

export type VendasPublic = {
    data: Array<VendaPublic>;
    count: number;
};

export type ReadClientesClientesGetData = {
    body?: never;
    path?: never;
    query?: {
        query?: string | null;
        skip?: number;
        limit?: number;
    };
    url: '/clientes';
};

export type ReadClientesClientesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadClientesClientesGetError = ReadClientesClientesGetErrors[keyof ReadClientesClientesGetErrors];

export type ReadClientesClientesGetResponses = {
    /**
     * Successful Response
     */
    200: ClientesPublic;
};

export type ReadClientesClientesGetResponse = ReadClientesClientesGetResponses[keyof ReadClientesClientesGetResponses];

export type CadastrarClienteClientesPostData = {
    body: ClienteCreate;
    path?: never;
    query?: never;
    url: '/clientes';
};

export type CadastrarClienteClientesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CadastrarClienteClientesPostError = CadastrarClienteClientesPostErrors[keyof CadastrarClienteClientesPostErrors];

export type CadastrarClienteClientesPostResponses = {
    /**
     * Successful Response
     */
    200: ClientePublic;
};

export type CadastrarClienteClientesPostResponse = CadastrarClienteClientesPostResponses[keyof CadastrarClienteClientesPostResponses];

export type DeleteClienteClientesClienteIdDeleteData = {
    body?: never;
    path: {
        cliente_id: number;
    };
    query?: never;
    url: '/clientes/{cliente_id}';
};

export type DeleteClienteClientesClienteIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteClienteClientesClienteIdDeleteError = DeleteClienteClientesClienteIdDeleteErrors[keyof DeleteClienteClientesClienteIdDeleteErrors];

export type DeleteClienteClientesClienteIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: ClientePublic;
};

export type DeleteClienteClientesClienteIdDeleteResponse = DeleteClienteClientesClienteIdDeleteResponses[keyof DeleteClienteClientesClienteIdDeleteResponses];

export type ReadClienteClientesClienteIdGetData = {
    body?: never;
    path: {
        cliente_id: number;
    };
    query?: never;
    url: '/clientes/{cliente_id}';
};

export type ReadClienteClientesClienteIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadClienteClientesClienteIdGetError = ReadClienteClientesClienteIdGetErrors[keyof ReadClienteClientesClienteIdGetErrors];

export type ReadClienteClientesClienteIdGetResponses = {
    /**
     * Successful Response
     */
    200: ClientePublic;
};

export type ReadClienteClientesClienteIdGetResponse = ReadClienteClientesClienteIdGetResponses[keyof ReadClienteClientesClienteIdGetResponses];

export type ReadComprasComprasGetData = {
    body?: never;
    path?: never;
    query?: {
        query?: string | null;
        skip?: number;
        limit?: number;
    };
    url: '/compras';
};

export type ReadComprasComprasGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadComprasComprasGetError = ReadComprasComprasGetErrors[keyof ReadComprasComprasGetErrors];

export type ReadComprasComprasGetResponses = {
    /**
     * Successful Response
     */
    200: ComprasPublic;
};

export type ReadComprasComprasGetResponse = ReadComprasComprasGetResponses[keyof ReadComprasComprasGetResponses];

export type CadastrarCompraComprasPostData = {
    body: CompraCreate;
    path?: never;
    query?: never;
    url: '/compras';
};

export type CadastrarCompraComprasPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CadastrarCompraComprasPostError = CadastrarCompraComprasPostErrors[keyof CadastrarCompraComprasPostErrors];

export type CadastrarCompraComprasPostResponses = {
    /**
     * Successful Response
     */
    200: CompraPublic;
};

export type CadastrarCompraComprasPostResponse = CadastrarCompraComprasPostResponses[keyof CadastrarCompraComprasPostResponses];

export type ReadCompraComprasCompraIdGetData = {
    body?: never;
    path: {
        compra_id: number;
    };
    query?: never;
    url: '/compras/{compra_id}';
};

export type ReadCompraComprasCompraIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadCompraComprasCompraIdGetError = ReadCompraComprasCompraIdGetErrors[keyof ReadCompraComprasCompraIdGetErrors];

export type ReadCompraComprasCompraIdGetResponses = {
    /**
     * Successful Response
     */
    200: CompraPublic;
};

export type ReadCompraComprasCompraIdGetResponse = ReadCompraComprasCompraIdGetResponses[keyof ReadCompraComprasCompraIdGetResponses];

export type ReadFornecedoresFornecedoresGetData = {
    body?: never;
    path?: never;
    query?: {
        query?: string | null;
        skip?: number;
        limit?: number;
    };
    url: '/fornecedores';
};

export type ReadFornecedoresFornecedoresGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadFornecedoresFornecedoresGetError = ReadFornecedoresFornecedoresGetErrors[keyof ReadFornecedoresFornecedoresGetErrors];

export type ReadFornecedoresFornecedoresGetResponses = {
    /**
     * Successful Response
     */
    200: FornecedoresPublic;
};

export type ReadFornecedoresFornecedoresGetResponse = ReadFornecedoresFornecedoresGetResponses[keyof ReadFornecedoresFornecedoresGetResponses];

export type CadastrarFornecedorFornecedoresPostData = {
    body: FornecedorCreate;
    path?: never;
    query?: never;
    url: '/fornecedores';
};

export type CadastrarFornecedorFornecedoresPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CadastrarFornecedorFornecedoresPostError = CadastrarFornecedorFornecedoresPostErrors[keyof CadastrarFornecedorFornecedoresPostErrors];

export type CadastrarFornecedorFornecedoresPostResponses = {
    /**
     * Successful Response
     */
    200: FornecedorPublic;
};

export type CadastrarFornecedorFornecedoresPostResponse = CadastrarFornecedorFornecedoresPostResponses[keyof CadastrarFornecedorFornecedoresPostResponses];

export type DeleteFornecedorFornecedoresFornecedorIdDeleteData = {
    body?: never;
    path: {
        fornecedor_id: number;
    };
    query?: never;
    url: '/fornecedores/{fornecedor_id}';
};

export type DeleteFornecedorFornecedoresFornecedorIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteFornecedorFornecedoresFornecedorIdDeleteError = DeleteFornecedorFornecedoresFornecedorIdDeleteErrors[keyof DeleteFornecedorFornecedoresFornecedorIdDeleteErrors];

export type DeleteFornecedorFornecedoresFornecedorIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: FornecedorPublic;
};

export type DeleteFornecedorFornecedoresFornecedorIdDeleteResponse = DeleteFornecedorFornecedoresFornecedorIdDeleteResponses[keyof DeleteFornecedorFornecedoresFornecedorIdDeleteResponses];

export type ReadFornecedorFornecedoresFornecedorIdGetData = {
    body?: never;
    path: {
        fornecedor_id: number;
    };
    query?: never;
    url: '/fornecedores/{fornecedor_id}';
};

export type ReadFornecedorFornecedoresFornecedorIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadFornecedorFornecedoresFornecedorIdGetError = ReadFornecedorFornecedoresFornecedorIdGetErrors[keyof ReadFornecedorFornecedoresFornecedorIdGetErrors];

export type ReadFornecedorFornecedoresFornecedorIdGetResponses = {
    /**
     * Successful Response
     */
    200: FornecedorPublic;
};

export type ReadFornecedorFornecedoresFornecedorIdGetResponse = ReadFornecedorFornecedoresFornecedorIdGetResponses[keyof ReadFornecedorFornecedoresFornecedorIdGetResponses];

export type ReadProdutosProdutosGetData = {
    body?: never;
    path?: never;
    query?: {
        query?: string | null;
        skip?: number;
        limit?: number;
    };
    url: '/produtos';
};

export type ReadProdutosProdutosGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadProdutosProdutosGetError = ReadProdutosProdutosGetErrors[keyof ReadProdutosProdutosGetErrors];

export type ReadProdutosProdutosGetResponses = {
    /**
     * Successful Response
     */
    200: ProdutosPublic;
};

export type ReadProdutosProdutosGetResponse = ReadProdutosProdutosGetResponses[keyof ReadProdutosProdutosGetResponses];

export type CadastrarProdutoProdutosPostData = {
    body: ProdutoCreate;
    path?: never;
    query?: never;
    url: '/produtos';
};

export type CadastrarProdutoProdutosPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CadastrarProdutoProdutosPostError = CadastrarProdutoProdutosPostErrors[keyof CadastrarProdutoProdutosPostErrors];

export type CadastrarProdutoProdutosPostResponses = {
    /**
     * Successful Response
     */
    200: ProdutoPublic;
};

export type CadastrarProdutoProdutosPostResponse = CadastrarProdutoProdutosPostResponses[keyof CadastrarProdutoProdutosPostResponses];

export type DeleteProdutoProdutosProdutoIdDeleteData = {
    body?: never;
    path: {
        produto_id: number;
    };
    query?: never;
    url: '/produtos/{produto_id}';
};

export type DeleteProdutoProdutosProdutoIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteProdutoProdutosProdutoIdDeleteError = DeleteProdutoProdutosProdutoIdDeleteErrors[keyof DeleteProdutoProdutosProdutoIdDeleteErrors];

export type DeleteProdutoProdutosProdutoIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: ProdutoPublic;
};

export type DeleteProdutoProdutosProdutoIdDeleteResponse = DeleteProdutoProdutosProdutoIdDeleteResponses[keyof DeleteProdutoProdutosProdutoIdDeleteResponses];

export type ReadProdutoProdutosProdutoIdGetData = {
    body?: never;
    path: {
        produto_id: number;
    };
    query?: never;
    url: '/produtos/{produto_id}';
};

export type ReadProdutoProdutosProdutoIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadProdutoProdutosProdutoIdGetError = ReadProdutoProdutosProdutoIdGetErrors[keyof ReadProdutoProdutosProdutoIdGetErrors];

export type ReadProdutoProdutosProdutoIdGetResponses = {
    /**
     * Successful Response
     */
    200: ProdutoPublic;
};

export type ReadProdutoProdutosProdutoIdGetResponse = ReadProdutoProdutosProdutoIdGetResponses[keyof ReadProdutoProdutosProdutoIdGetResponses];

export type ReadVendasVendasGetData = {
    body?: never;
    path?: never;
    query?: {
        query?: string | null;
        skip?: number;
        limit?: number;
    };
    url: '/vendas';
};

export type ReadVendasVendasGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadVendasVendasGetError = ReadVendasVendasGetErrors[keyof ReadVendasVendasGetErrors];

export type ReadVendasVendasGetResponses = {
    /**
     * Successful Response
     */
    200: VendasPublic;
};

export type ReadVendasVendasGetResponse = ReadVendasVendasGetResponses[keyof ReadVendasVendasGetResponses];

export type CadastrarVendaVendasPostData = {
    body: BodyCadastrarVendaVendasPost;
    path?: never;
    query?: never;
    url: '/vendas';
};

export type CadastrarVendaVendasPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CadastrarVendaVendasPostError = CadastrarVendaVendasPostErrors[keyof CadastrarVendaVendasPostErrors];

export type CadastrarVendaVendasPostResponses = {
    /**
     * Successful Response
     */
    200: VendaPublic;
};

export type CadastrarVendaVendasPostResponse = CadastrarVendaVendasPostResponses[keyof CadastrarVendaVendasPostResponses];

export type ReadVendaVendasVendaIdGetData = {
    body?: never;
    path: {
        venda_id: number;
    };
    query?: never;
    url: '/vendas/{venda_id}';
};

export type ReadVendaVendasVendaIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReadVendaVendasVendaIdGetError = ReadVendaVendasVendaIdGetErrors[keyof ReadVendaVendasVendaIdGetErrors];

export type ReadVendaVendasVendaIdGetResponses = {
    /**
     * Successful Response
     */
    200: VendaPublic;
};

export type ReadVendaVendasVendaIdGetResponse = ReadVendaVendasVendaIdGetResponses[keyof ReadVendaVendasVendaIdGetResponses];

export type LoginAccessTokenLoginAccessTokenPostData = {
    body: BodyLoginAccessTokenLoginAccessTokenPost;
    path?: never;
    query?: never;
    url: '/login/access-token';
};

export type LoginAccessTokenLoginAccessTokenPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginAccessTokenLoginAccessTokenPostError = LoginAccessTokenLoginAccessTokenPostErrors[keyof LoginAccessTokenLoginAccessTokenPostErrors];

export type LoginAccessTokenLoginAccessTokenPostResponses = {
    /**
     * Successful Response
     */
    200: Token;
};

export type LoginAccessTokenLoginAccessTokenPostResponse = LoginAccessTokenLoginAccessTokenPostResponses[keyof LoginAccessTokenLoginAccessTokenPostResponses];

export type TestTokenLoginTestTokenPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/login/test-token';
};

export type TestTokenLoginTestTokenPostResponses = {
    /**
     * Successful Response
     */
    200: UserPublic;
};

export type TestTokenLoginTestTokenPostResponse = TestTokenLoginTestTokenPostResponses[keyof TestTokenLoginTestTokenPostResponses];